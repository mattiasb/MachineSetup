---
- name: "Languages : Node.js"
  npm:
    name: "{{ item }}"
    global: true
  with_items: "{{ languages_nodejs }}"
  environment:
    NPM_CONFIG_USERCONFIG: "{{ homedir }}/.config/npm/config"

- name: "Languages : Python"
  vars:
    features: >-
      {{ item.value['features']
       | d(False)
       | ternary("[" + (item.value['features'] | d([]) | join(',')) + "]", "")
      }}
    version: >-
      {{ item.value['version']
       | d(False)
       | ternary("==" + (item.value['version'] | d("")), "")
      }}
    _with: >-
      {{ item.value['with']
       | d([])
       | map('with_format', "--with={} ")
       | join('')
      }}
  command: uv tool install {{ _with }}{{ item.key }}{{ features }}{{ version }}
  register: result
  changed_when: '"is already installed" not in result.stderr'
  with_dict: "{{ languages_python }}"

- name: "Languages : Ruby"
  gem:
    name: "{{ item }}"
    user_install: true
    norc: false
  with_items: "{{ languages_ruby }}"

- name: "Languages : Rust"
  cargo:
    name: "{{ item }}"
    path: "{{ homedir }}/.local/"
  with_items: "{{ languages_rust }}"
  environment:
    CARGO_HOME: "{{ homedir }}/.local/share/cargo"

- name: "Languages : Go"
  command: go install {{ item.key }}@{{ item.value | default('latest') }}
  with_dict: "{{ languages_go }}"
  environment:
    GOBIN: "{{ homedir }}/.local/bin"
    GOPATH: "{{ homedir }}/Code/go:/usr/share/gocode"
  args:
    creates: "{{ homedir }}/.local/bin/{{ item.key | basename }}"
